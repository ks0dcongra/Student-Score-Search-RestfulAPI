kind: pipeline
type: docker
name: default

trigger:
  branch:
    - master
    - develop
    - fix/*
    - feature/*


steps:
  - name: testpostgres
    image: postgres:9-alpine
    commands:
      - sleep 5 #give the service some time to start
      - psql -U postgres -d example -h database

  - name: docker start
    image: plugins/docker
    settings:
      auto_tag: true
      cache_from: andy_trainings
      daemon_off: false
      password:
        from_secret: docker_password
      repo: andy_trainings
      username:
        from_secret: docker_username

  - name: build
    image: golang:latest
    commands:
      - go build main.go

  - name: deploy
    image: golang:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: example
    commands:
      - ./main

  - name: test
    image: golang:latest
    commands:
      - go test ./app/http/controller
      - go test ./app/http/middleware
      - go test ./app/repository
      - go test ./app/service

services:
  - name: database
    image: postgres:9-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: example
      POSTGRES_HOST_AUTH_METHOD: trust
      
# steps:   
#   - name: publish_to_prod
#     image: plugins/docker
#       commands:
#         - docker compose up
#     settings:
#       registry: 697d-61-31-138-103.ngrok-free.app
#       repo: 697d-61-31-138-103.ngrok-free.app
  
#   - name: publish
#     pull: always
#     image: plugins/docker
#     settings:
#       auto_tag: true
#       auto_tag_suffix: linux-amd64
#       cache_from: appleboy/gorush
#       daemon_off: false
#       dockerfile: docker/Dockerfile.linux.amd64
#       password:
#         from_secret: docker_password
#       repo: appleboy/rush
#       username:
#         from_secret: docker_username
  